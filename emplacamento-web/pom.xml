<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.losolved.emplacamento</groupId>
		<artifactId>emplacamento</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<groupId>com.losolved.emplacamento</groupId>
	<artifactId>emplacamento-web</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>emplacamento-web</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		 <proguard.version>6.2.0</proguard.version>
        <proguard.maven.plugin.version>2.2.0</proguard.maven.plugin.version>
        	 <start-class>com.losolved.emplacamento.web.controller.LoSolvedEmplacamentoApplication</start-class>
	
	
	</properties>
	<profiles>
	<profile>
 		<id>prod</id>
 		<properties>
 			<spring.data.source>jdbc:postgres://apnptlywwgifag:998aac0ee1d5852a2c3a0c858afcb9bfa26fd8d30d00890ce5475b9940b4ac2c@ec2-18-213-176-229.compute-1.amazonaws.com:5432/d6b28q10ms6rtq</spring.data.source>
 			<spring.data.username></spring.data.username>
			<spring.data.password></spring.data.password>
 		</properties>	
 	</profile>
 	<profile>
 		<id>dev</id>
 		<properties>
 			<spring.data.source>jdbc:postgresql://127.0.0.1:5432/emplacamento</spring.data.source>
 			<spring.data.username></spring.data.username>
			<spring.data.password></spring.data.password>
			
 		</properties>
 		    <activation>
                <activeByDefault>true</activeByDefault>
            </activation>	
 	</profile>	
	</profiles>
	
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>

		 <dependency>
		  <groupId>com.losolved.emplacamento</groupId>
		  <artifactId>emplacamento-integration</artifactId>
		  <version>0.0.1-SNAPSHOT</version>
		  <exclusions>
					<exclusion>
						<groupId>com.losolved.emplacamento</groupId>
						<artifactId>emplacamento-domain</artifactId>
					</exclusion>
				</exclusions>
		  
		</dependency>


		<dependency>
			<groupId>com.losolved.emplacamento</groupId>
			<artifactId>emplacamento-services</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<exclusions>
					<exclusion>
						<groupId>com.losolved.emplacamento</groupId>
						<artifactId>emplacamento-integration</artifactId>
					</exclusion>
				</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web-services</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		</dependencies>



	<build>
	
     <finalName>${project.parent.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
	  
		<plugins>
            <plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>${proguard.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <proguardVersion>${proguard.version}</proguardVersion>
                    <injar>${project.build.finalName}.jar</injar>
                    <outjar>${project.build.finalName}.jar</outjar>
                    <obfuscate>true</obfuscate>
                    <options>
                        <option>-dontshrink</option>
                        <option>-dontoptimize</option>
                        <!-- This option will replace all strings in reflections method invocations with new class names.
                             For example, invokes Class.forName('className')-->
                        <option>-adaptclassstrings</option>
                        <!-- This option will save all original annotations and etc. Otherwise all we be removed from files.-->
                        <option>-keepattributes
                            Exceptions,
                            InnerClasses,
                            Signature,
                            Deprecated,
                            SourceFile,
                            LineNumberTable,
                            *Annotation*,
                            EnclosingMethod
                        </option>
                        <!-- This option will save all original names in interfaces (without obfuscate).-->
                        <option>-keepnames interface **</option>
                        <!-- This option will save all original methods parameters in files defined in -keep sections,
                             otherwise all parameter names will be obfuscate.-->
                        <option>-keepparameternames</option>
                        <!-- This option will save all original class files (without obfuscate) but obfuscate all
                             in domain and service packages.-->
                        <option>-keep
                            class  com.losolved.emplacamento.web.controller.LoSolvedEmplacamentoApplication {
                                public static void main(java.lang.String[]);
                            }
                        </option>
                          <!-- This option ignore warnings such as duplicate class definitions and classes in incorrectly
                            named files-->
                        <option>-ignorewarnings</option>
                        <!-- This option will save all original class files (without obfuscate) in service package-->
                        <!--<option>-keep class com.slm.proguard.example.spring.boot.service { *; }</option>-->
                        <!-- This option will save all original interfaces files (without obfuscate) in all packages.-->
                        <option>-keep interface * extends * { *; }</option>
                        <!-- This option will save all original defined annotations in all class in all packages.-->
                        <option>-keepclassmembers class * {
                                @org.springframework.beans.factory.annotation.Autowired *;
                                @org.springframework.beans.factory.annotation.Value *;
                            }
                        </option>
                    </options>
                    <injarNotExistsSkip>true</injarNotExistsSkip>
                    <libs>
                        <!--Put here your libraries if required-->
                        <!--<lib>${java.home}/lib/rt.jar</lib>-->
                    </libs>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>net.sf.proguard</groupId>
                        <artifactId>proguard-base</artifactId>
                        <version>${proguard.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
		
		
    
    
    
	</build>

 

</project>
